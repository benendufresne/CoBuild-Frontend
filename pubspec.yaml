name: cobuild
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+4

environment:
  sdk: ^3.5.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  flutter_bloc: ^8.1.6
  connectivity_plus: ^6.1.3
  intl: ^0.19.0
  http: ^1.2.2
  shared_preferences: ^2.3.3
  permission_handler: ^11.3.1
  flutter_svg: ^2.0.15
  device_info_plus: ^11.1.1
  package_info_plus: ^8.1.1
  json_serializable: ^6.9.0
  go_router: ^14.6.1
  firebase_messaging: ^15.1.5
  flutter_local_notifications: ^18.0.1
  cached_network_image: ^3.4.1
  pinput: ^5.0.0
  url_launcher: ^6.3.1
  google_sign_in: ^6.2.2
  flutter_facebook_auth: ^7.1.1
  sign_in_with_apple: ^6.1.4
  country_code_picker: ^3.1.0
  webview_flutter: ^4.10.0
  flutter_widget_from_html: ^0.15.3
  firebase_core: ^3.8.1
  geolocator: ^13.0.2
  uuid: ^4.5.1
  google_places_flutter: ^2.0.9
  geocoding: ^3.0.0
  mobile_scanner: ^6.0.2
  google_maps_flutter: ^2.10.0
  file_picker: ^8.1.7
  image_picker: ^1.1.2
  mime: ^2.0.0
  flutter_pdfview: ^1.4.0
  image_editor_plus: ^1.0.6
  path_provider: ^2.1.5
  carousel_slider: ^5.0.0
  flutter_swipe_action_cell: ^3.1.5
  socket_io_client: ^3.0.2
  another_flushbar: ^1.12.30
  objectid: ^3.1.0
  flutter_branch_sdk: ^8.3.2
  app_links: ^6.4.0

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  json_annotation: ^4.9.0

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^4.0.0
  build_runner: ^2.4.13

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/onboarding/
    - assets/images/splash/
    - assets/images/bottom_nav/
    - assets/images/social_login_icons/
    - assets/images/
    - assets/emoji/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Manrope
      fonts:
        - asset: assets/fonts/manrope/Manrope-Light.ttf
          weight: 300
        - asset: assets/fonts/manrope/Manrope-Regular.ttf
          weight: 400
        - asset: assets/fonts/manrope/Manrope-Medium.ttf
          weight: 500
        - asset: assets/fonts/manrope/Manrope-SemiBold.ttf
          weight: 600
        - asset: assets/fonts/manrope/Manrope-Bold.ttf
          weight: 700
        - asset: assets/fonts/manrope/Manrope-ExtraBold.ttf
          weight: 800

flutter_intl:
  enabled: true
  class_name: S
  arb_dir: lib/utils/app_helpers/app_strings
  output_dir: lib/utils/app_helpers/app_strings
  main_locale: en
